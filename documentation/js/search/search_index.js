var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.291,1,1.822]],["body/controllers/AppController.html",[0,1.855,1,2.618,2,1.404,3,0.447,4,0.447,5,0.384,6,2.644,7,0.584,8,1.669,9,4.165,10,1.565,11,0.04,12,3.221,13,3.495,14,3.495,15,4.257,16,3.495,17,0.827,18,3.221,19,1.263,20,0.76,21,0.74,22,2.264,23,3.495,24,1.263,25,2.317,26,2.644,27,3.221,28,0.447,29,0.067,30,1.754,31,1.565,32,2.644,33,1.263,34,3.221,35,0.029,36,0.029]],["title/modules/AppModule.html",[37,1.161,38,1.822]],["body/modules/AppModule.html",[1,2.737,2,1.693,3,0.391,4,0.391,5,0.336,11,0.04,20,0.83,21,0.647,25,2.531,26,2.31,28,0.391,29,0.059,35,0.026,36,0.026,37,1.523,38,3.5,39,1.226,40,1.693,41,2.31,42,2.31,43,2.31,44,2.836,45,2.27,46,2.836,47,2.116,48,1.532,49,1.532,50,2.814,51,2.389,52,2.732,53,2.814,54,2.31,55,2.814,56,2.814]],["title/injectables/AppService.html",[25,1.44,57,0.847]],["body/injectables/AppService.html",[3,0.465,4,0.465,5,0.4,7,0.608,8,1.712,9,3.586,11,0.04,14,3.586,17,0.86,19,1.313,20,0.534,21,0.77,25,2.123,28,0.465,29,0.07,33,1.313,35,0.03,36,0.03,57,1.249,58,1.628,59,2.751,60,4.369,61,2.094,62,3.351,63,1.46,64,1.183,65,0.86,66,1.313,67,4.369,68,4.369,69,2.751,70,3.351,71,3.351]],["title/controllers/AuthController.html",[0,1.291,72,1.822]],["body/controllers/AuthController.html",[0,0.969,2,0.969,3,0.309,4,0.309,5,0.265,7,0.403,8,1.287,10,1.596,11,0.041,17,0.843,19,1.287,20,0.815,21,0.511,22,1.563,23,3.205,24,0.872,28,0.309,29,0.046,30,1.211,31,1.081,32,2.696,33,1.69,35,0.022,36,0.022,63,1.431,64,1.159,65,0.843,66,1.287,72,2.019,73,1.826,74,1.826,75,2.224,76,2.651,77,3.284,78,1.826,79,2.621,80,2.224,81,3.284,82,3.284,83,2.309,84,2.224,85,2.309,86,2.224,87,1.518,88,2.224,89,3.284,90,2.696,91,2.224,92,2.224,93,1.826,94,2.224,95,2.224,96,2.696,97,1.826,98,1.826,99,1.211,100,2.696,101,1.826,102,1.897,103,1.826,104,1.211,105,1.826,106,1.826,107,1.826,108,1.563,109,2.224,110,2.224,111,2.224,112,2.224,113,2.224,114,2.224,115,2.224,116,1.826,117,2.224]],["title/modules/AuthModule.html",[37,1.161,44,1.613]],["body/modules/AuthModule.html",[2,1.636,3,0.372,4,0.372,5,0.32,11,0.041,20,0.839,21,0.615,28,0.372,29,0.056,35,0.026,36,0.026,37,1.472,39,1.167,40,1.636,44,3.013,45,2.235,47,2.045,48,1.459,49,1.459,51,2.309,52,2.64,72,2.666,99,1.459,102,2.492,103,2.199,118,2.199,119,2.199,120,2.679,121,2.792,122,2.679,123,2.679,124,2.679,125,2.679,126,1.883,127,2.679,128,2.679,129,2.679,130,2.679,131,1.459,132,2.679,133,2.679,134,2.199,135,2.679,136,2.679,137,2.679]],["title/injectables/AuthService.html",[57,0.847,102,1.44]],["body/injectables/AuthService.html",[3,0.318,4,0.318,5,0.274,7,0.416,8,1.316,11,0.041,17,0.862,19,0.899,20,0.776,21,0.527,28,0.318,29,0.048,31,1.632,33,0.899,35,0.023,36,0.023,57,0.96,58,1.114,63,1.464,64,1.185,65,0.862,66,1.316,76,2.065,78,2.757,79,2.65,83,1.612,85,2.361,87,1.136,102,1.632,104,1.248,105,1.882,106,1.882,107,1.882,126,1.612,138,1.882,139,2.444,140,2.361,141,1.612,142,1.715,143,5.028,144,2.293,145,2.361,146,2.293,147,1.882,148,2.361,149,1.882,150,3.358,151,2.444,152,1.931,153,2.164,154,2.065,155,1.612,156,2.757,157,2.361,158,3.358,159,3.358,160,3.358,161,3.358,162,2.293,163,2.361,164,1.41,165,2.293]],["title/classes/CreateUserDto.html",[29,0.062,166,1.44]],["body/classes/CreateUserDto.html",[3,0.271,4,0.271,5,0.233,7,0.354,10,2.113,11,0.039,17,1.262,20,0.475,24,0.765,28,0.271,29,0.062,35,0.02,36,0.02,61,1.974,64,1.535,65,1.262,69,2.444,87,0.851,152,2.113,153,1.965,166,1.447,167,0.948,168,4.134,169,1.372,170,1.447,171,3.057,172,2.963,173,1.83,174,2.537,175,2.963,176,3.57,177,4.034,178,2.977,179,3.611,180,2.977,181,1.951,182,1.951,183,1.951,184,3.315,185,1.951,186,1.951,187,1.951,188,1.951,189,2.444,190,2.977,191,1.951,192,1.951,193,1.951,194,1.951,195,2.977,196,1.951,197,1.951,198,1.951,199,3.222,200,1.951,201,3.57,202,3.762,203,2.977,204,2.444,205,1.372,206,1.951,207,2.674,208,1.951,209,1.602,210,1.951,211,1.951,212,1.951,213,1.602]],["title/injectables/JwtStrategy.html",[57,0.847,121,1.613]],["body/injectables/JwtStrategy.html",[3,0.353,4,0.353,5,0.304,7,0.462,8,1.42,11,0.041,17,0.93,19,0.998,20,0.732,21,0.585,28,0.353,29,0.053,30,1.386,31,1.237,33,0.998,35,0.025,36,0.025,57,1.036,58,1.237,61,0.998,63,1.579,64,1.279,65,1.179,66,1.42,87,1.314,90,2.09,99,1.386,121,1.973,131,1.386,134,2.09,139,2.593,140,1.79,141,1.79,142,1.8,145,2.547,147,2.974,149,2.09,151,1.565,152,1.76,154,1.565,155,1.79,156,2.09,157,1.79,163,1.79,164,1.565,214,2.09,215,3.622,216,2.546,217,3.622,218,3.622,219,2.546,220,2.546,221,2.09,222,2.546,223,2.546,224,2.546,225,2.09,226,1.79,227,2.546,228,2.546,229,2.546,230,2.546,231,2.546,232,2.09,233,2.546,234,2.546,235,2.546]],["title/classes/LoginDto.html",[29,0.062,79,1.613]],["body/classes/LoginDto.html",[3,0.413,4,0.413,5,0.355,7,0.54,10,1.963,11,0.04,17,1.037,20,0.644,24,1.167,28,0.413,29,0.084,35,0.027,36,0.027,61,1.926,65,1.037,79,2.199,152,2.497,153,2.797,167,1.447,170,1.963,177,4.034,179,3.455,199,3.222,201,3.762,202,3.762,204,3.315,205,2.093,207,2.483,209,3.315,236,2.444,237,2.977,238,4.039,239,2.977,240,2.977,241,4.039,242,2.977]],["title/classes/LoginResponseDto.html",[29,0.062,104,1.613]],["body/classes/LoginResponseDto.html",[3,0.426,4,0.426,5,0.367,7,0.557,10,2.005,11,0.04,17,1.059,20,0.658,24,1.204,28,0.426,29,0.064,35,0.028,36,0.028,61,1.617,65,1.059,76,2.537,83,3.274,87,1.529,101,2.523,104,2.247,131,2.247,167,1.493,170,2.005,176,3.387,179,2.9,199,3.274,207,2.537,243,3.824,244,2.523,245,4.126,246,4.126,247,3.073,248,4.126,249,3.387,250,4.126,251,3.073]],["title/modules/PrismaModule.html",[37,1.161,45,1.291]],["body/modules/PrismaModule.html",[3,0.47,4,0.47,5,0.404,11,0.039,20,0.701,21,0.778,28,0.47,29,0.071,35,0.03,36,0.03,37,1.723,39,1.475,40,1.916,45,2.438,47,2.395,48,1.843,49,1.843,51,2.704,142,2.296,252,2.778,253,2.778,254,2.778,255,3.384,256,4.397,257,3.384]],["title/injectables/PrismaService.html",[57,0.847,142,1.161]],["body/injectables/PrismaService.html",[3,0.417,4,0.417,5,0.358,7,0.545,8,1.592,11,0.04,17,1.043,19,1.592,20,0.648,21,0.69,28,0.417,29,0.063,35,0.028,36,0.028,57,1.162,58,1.46,63,1.309,64,1.06,65,0.771,66,1.177,139,3.339,142,1.592,154,2.498,226,2.856,258,2.466,259,4.604,260,4.063,261,5.312,262,4.063,263,4.933,264,3.004,265,3.004,266,3.004,267,2.466,268,3.004,269,3.004,270,3.004,271,3.004]],["title/classes/UpdateUserDto.html",[29,0.062,272,1.613]],["body/classes/UpdateUserDto.html",[3,0.551,4,0.551,5,0.473,11,0.039,20,0.775,24,1.555,28,0.551,29,0.083,35,0.033,36,0.033,166,1.928,167,1.928,169,2.789,226,2.789,272,2.647,273,3.257,274,3.967,275,2.789,276,2.789,277,3.967]],["title/classes/User.html",[29,0.062,87,0.847]],["body/classes/User.html",[3,0.392,4,0.392,5,0.337,7,0.512,11,0.039,17,1.398,28,0.392,29,0.059,35,0.027,36,0.027,61,2.192,64,1.574,65,1.398,66,2.044,87,1.114,152,2.168,153,2.429,167,1.373,170,1.894,171,3.136,172,3.662,173,2.743,174,3.136,175,3.662,184,3.947,189,3.199,278,2.32,279,2.826,280,2.826,281,2.826,282,2.826,283,2.826,284,2.826,285,2.826,286,2.826]],["title/controllers/UsersController.html",[0,1.291,287,1.822]],["body/controllers/UsersController.html",[0,0.836,2,0.836,3,0.266,4,0.266,5,0.229,7,0.348,8,1.151,10,2.097,11,0.041,17,1.108,19,1.691,20,0.755,21,0.441,22,1.348,24,0.752,28,0.266,29,0.04,30,1.044,31,0.932,33,1.691,35,0.02,36,0.02,61,1.964,63,1.744,64,1.412,65,1.027,66,1.568,74,1.574,85,2.065,87,0.548,93,2.411,96,2.931,97,1.574,98,1.574,99,1.044,100,3.542,116,3.285,164,1.179,166,2.212,173,2.799,272,2.179,275,2.065,276,2.065,287,1.806,288,1.574,289,1.918,290,3.285,291,2.411,292,2.411,293,2.411,294,1.918,295,1.918,296,1.918,297,1.918,298,1.574,299,1.918,300,1.918,301,1.574,302,1.918,303,1.918,304,1.574,305,3.285,306,1.918,307,1.918,308,1.918,309,1.918,310,1.735,311,1.574,312,1.574,313,1.574,314,1.574,315,1.918,316,1.918,317,1.918,318,1.918,319,1.918,320,1.918,321,1.918,322,1.918,323,1.918,324,1.918,325,1.918,326,1.918,327,1.918,328,1.918]],["title/modules/UsersModule.html",[37,1.161,46,1.613]],["body/modules/UsersModule.html",[2,1.832,3,0.439,4,0.439,5,0.377,11,0.04,20,0.803,21,0.726,28,0.439,29,0.066,35,0.029,36,0.029,37,1.648,39,1.377,40,1.832,45,2.349,46,3.042,47,2.289,48,1.721,49,1.721,51,2.585,52,2.955,54,2.594,287,2.904,310,2.619,311,2.594,329,2.594,330,3.16,331,2.594,332,3.16,333,3.16]],["title/injectables/UsersService.html",[57,0.847,310,1.44]],["body/injectables/UsersService.html",[3,0.233,4,0.233,5,0.2,7,0.304,8,1.037,11,0.041,17,1.106,19,1.588,20,0.687,21,0.385,28,0.233,29,0.035,30,0.913,31,0.815,33,1.588,35,0.018,36,0.018,57,0.757,58,0.815,61,1.885,63,1.766,64,1.591,65,1.04,66,1.588,87,0.757,139,3.262,140,1.179,141,1.179,142,1.459,145,1.86,148,1.86,151,1.627,152,1.286,153,1.785,154,2.492,155,1.179,166,1.809,171,1.86,173,2.648,174,1.86,213,3.837,221,3.327,232,2.173,249,1.377,272,2.027,275,1.86,276,1.86,290,3.056,291,2.173,292,2.173,293,2.173,298,2.173,301,2.173,304,2.173,305,3.536,310,1.286,312,1.377,313,1.377,314,1.377,334,1.377,335,1.677,336,2.647,337,1.677,338,1.677,339,1.677,340,1.677,341,1.677,342,1.677,343,3.723,344,1.677,345,1.677,346,1.677,347,2.647,348,1.677,349,1.677,350,1.677,351,1.677,352,1.677,353,1.677,354,1.377,355,1.677]],["title/coverage.html",[356,3.304]],["body/coverage.html",[0,1.898,1,1.66,5,0.322,6,2.217,11,0.04,25,1.312,29,0.103,35,0.026,36,0.026,57,1.419,59,2.217,65,0.693,72,1.66,73,2.217,79,1.47,87,0.772,102,1.312,104,1.47,108,1.898,121,1.47,138,2.217,142,1.058,157,1.898,166,1.312,168,2.217,169,2.654,214,2.217,236,2.217,243,2.217,244,2.217,258,2.217,272,1.47,273,2.217,278,2.217,287,1.66,288,2.217,310,1.312,334,2.217,356,2.217,357,2.7,358,2.7,359,2.7,360,5.767,361,3.776,362,5.141,363,2.217,364,2.217,365,2.7,366,4.354,367,2.217,368,2.7,369,2.217,370,3.776,371,2.7,372,2.7,373,2.7,374,2.7]],["title/dependencies.html",[40,1.551,375,2.039]],["body/dependencies.html",[11,0.041,21,0.723,24,1.233,29,0.087,35,0.029,36,0.029,40,1.371,99,1.713,126,2.211,131,1.713,148,2.211,205,2.211,225,3.869,267,2.582,376,4.712,377,3.145,378,3.145,379,3.145,380,3.145,381,3.145,382,3.145,383,3.145,384,4.191,385,3.145,386,4.191,387,3.145,388,3.145,389,3.145,390,3.145,391,3.145,392,3.145,393,3.145,394,3.145,395,3.145,396,3.145,397,3.145,398,3.145,399,3.145,400,3.145,401,3.145,402,3.145,403,3.145,404,2.582,405,3.145,406,3.145]],["title/miscellaneous/functions.html",[407,1.527,408,2.921]],["body/miscellaneous/functions.html",[7,0.795,11,0.035,35,0.035,36,0.035,367,3.599,369,4.504,407,2.696,408,3.599,409,4.384]],["title/index.html",[7,0.45,410,2.483,411,2.483]],["body/index.html",[11,0.03,13,2.751,16,2.751,35,0.03,36,0.03,76,2.686,131,1.824,354,2.751,404,2.751,412,5.151,413,4.369,414,3.351,415,2.751,416,3.351,417,3.351,418,4.369,419,3.351,420,3.351,421,4.369,422,3.351,423,3.351,424,3.351,425,3.351,426,3.351,427,5.151,428,4.369,429,4.861,430,4.369,431,3.351,432,3.351,433,3.351,434,3.351,435,3.351,436,3.351,437,3.351,438,3.351,439,4.369,440,3.351,441,2.751,442,3.351,443,3.351,444,3.351,445,3.351]],["title/modules.html",[39,1.754]],["body/modules.html",[11,0.033,35,0.033,36,0.033,38,2.484,39,1.76,44,2.2,45,1.76,46,2.2,446,5.513,447,5.513,448,5.513,449,5.513]],["title/overview.html",[450,3.304]],["body/overview.html",[2,1.247,11,0.039,25,2.182,35,0.027,36,0.027,38,3.448,39,1.247,40,1.713,41,2.35,42,2.35,43,2.35,44,3.018,45,2.38,46,2.92,47,2.141,48,1.559,49,1.559,58,1.391,102,2.182,118,2.35,119,2.35,121,2.445,142,2.102,167,1.391,252,2.35,253,2.35,254,2.35,310,2.182,329,2.35,331,2.35,415,3.228,441,2.35,450,2.35,451,2.862]],["title/properties.html",[170,1.729,375,2.039]],["body/properties.html",[11,0.04,35,0.035,36,0.035,170,2.089,207,2.644,452,4.299,453,4.299,454,4.299,455,4.299,456,4.299]],["title/miscellaneous/variables.html",[407,1.527,457,2.921]],["body/miscellaneous/variables.html",[7,0.695,11,0.04,33,1.501,35,0.032,36,0.032,87,1.361,108,3.344,151,2.925,163,2.693,164,2.356,363,3.145,364,3.906,407,2.356,457,3.145,458,3.831,459,3.831,460,3.831,461,3.831,462,3.831,463,3.831,464,3.831,465,3.831,466,3.831]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":453,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["0.10.1",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":413,"title":{},"body":{"index.html":{}}}],["1.0.0",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":345,"title":{},"body":{"injectables/UsersService.html":{}}}],["123.123.123",{"_index":180,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["123456",{"_index":210,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["123456'})@isstring()@isnotempty",{"_index":196,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14)@isstring()@isnotempty",{"_index":182,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["2",{"_index":436,"title":{},"body":{"index.html":{}}}],["24h",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["3",{"_index":441,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.0.2",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":451,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["44",{"_index":211,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["44'})@length(13",{"_index":181,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["5",{"_index":415,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5.0.1",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["abcd@1234",{"_index":241,"title":{},"body":{"classes/LoginDto.html":{}}}],["address",{"_index":238,"title":{},"body":{"classes/LoginDto.html":{}}}],["admin",{"_index":190,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["and/or",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["apiproperty",{"_index":199,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":176,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('status",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":315,"title":{},"body":{"controllers/UsersController.html":{}}}],["aplicação",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app",{"_index":265,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":271,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":38,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["autenticado",{"_index":250,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":420,"title":{},"body":{"index.html":{}}}],["auth",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":72,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["authentication",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["authmodule",{"_index":44,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":456,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":102,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["baseurl",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["bcrypt",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(dto.password",{"_index":344,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":189,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":369,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["brazilian",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["browse",{"_index":449,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":446,"title":{},"body":{"modules.html":{}}}],["bruna",{"_index":208,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bruna'})@isstring()@isnotempty",{"_index":193,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bruna@gmail.com",{"_index":209,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["bruna@gmail.com'})@isstring()@isnotempty()@isemail",{"_index":186,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["class",{"_index":29,"title":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":167,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clone",{"_index":430,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":252,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":254,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":253,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":329,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":330,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":331,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["com",{"_index":354,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["comando",{"_index":432,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":425,"title":{},"body":{"index.html":{}}}],["const",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":316,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":356,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpf",{"_index":171,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["create",{"_index":275,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":317,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":294,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(dto",{"_index":336,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdat",{"_index":172,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["createparamdecorator((_",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":166,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["crud",{"_index":416,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currently",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["da",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["dados",{"_index":248,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":343,"title":{},"body":{"injectables/UsersService.html":{}}}],["date",{"_index":184,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["de",{"_index":418,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletado",{"_index":353,"title":{},"body":{"injectables/UsersService.html":{}}}],["delete",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":326,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":40,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependências",{"_index":438,"title":{},"body":{"index.html":{}}}],["description",{"_index":207,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"properties.html":{}}}],["docs",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":305,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/create",{"_index":312,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":313,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":417,"title":{},"body":{"index.html":{}}}],["email",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["enableshutdownhooks",{"_index":260,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":262,"title":{},"body":{"injectables/PrismaService.html":{}}}],["entities/user.entity",{"_index":314,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":179,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executioncontext",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":235,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":256,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":226,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":223,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":230,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":232,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":290,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":291,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":321,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":298,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["function",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":408,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":245,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":320,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["getstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getstatus(baseurl",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":410,"title":{"index.html":{}},"body":{}}],["git",{"_index":433,"title":{},"body":{"index.html":{}}}],["github",{"_index":431,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":445,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://github.com/brunabbomfim/m5",{"_index":434,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":173,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id:string",{"_index":206,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["identifier",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":231,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":268,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":263,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":57,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["instalar",{"_index":437,"title":{},"body":{"index.html":{}}}],["install",{"_index":440,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin",{"_index":174,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["isboolean",{"_index":203,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":204,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ishashvalid",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":202,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring",{"_index":201,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":240,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@isemail()@apiproperty({description",{"_index":237,"title":{},"body":{"classes/LoginDto.html":{}}}],["jwt",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":229,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":121,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":200,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(13,14",{"_index":212,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["license",{"_index":454,"title":{},"body":{"properties.html":{}}}],["link",{"_index":444,"title":{},"body":{"index.html":{}}}],["literal",{"_index":218,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["logged",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"index.html":{}}}],["login(@body",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":79,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":104,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["matching",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":352,"title":{},"body":{"injectables/UsersService.html":{}}}],["metadata",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":407,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":37,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":39,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["módulo",{"_index":414,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["npm",{"_index":439,"title":{},"body":{"index.html":{}}}],["number",{"_index":178,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["o",{"_index":429,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":261,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["os",{"_index":423,"title":{},"body":{"index.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":450,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":375,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":427,"title":{},"body":{"index.html":{}}}],["param",{"_index":309,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":349,"title":{},"body":{"injectables/UsersService.html":{}}}],["partialtype",{"_index":274,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":277,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":225,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":222,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":227,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":308,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":323,"title":{},"body":{"controllers/UsersController.html":{}}}],["payload",{"_index":220,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":234,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["post",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["prisma.service",{"_index":257,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":267,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["prisma/prisma.service",{"_index":342,"title":{},"body":{"injectables/UsersService.html":{}}}],["prismaclient",{"_index":259,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":45,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":142,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_secret",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["profile",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["projeto",{"_index":412,"title":{},"body":{"index.html":{}}}],["projeto1.git",{"_index":435,"title":{},"body":{"index.html":{}}}],["promise",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["properties",{"_index":170,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/User.html":{},"properties.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["readonly",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["receiving",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["reflect",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":292,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":301,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["request",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response.dto",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":244,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:11",{"_index":247,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:16",{"_index":251,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["rodar",{"_index":428,"title":{},"body":{"index.html":{}}}],["run",{"_index":442,"title":{},"body":{"index.html":{}}}],["running",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["secret",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":233,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seguintes",{"_index":424,"title":{},"body":{"index.html":{}}}],["select",{"_index":347,"title":{},"body":{"injectables/UsersService.html":{}}}],["senha",{"_index":195,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["server",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{}}}],["signoptions",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../logged",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":59,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":243,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":236,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":239,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:20",{"_index":242,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":214,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":219,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":216,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":255,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/prisma/prisma.service.ts",{"_index":258,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":264,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":266,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/dto/create",{"_index":168,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":273,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{}}}],["src/users/entities/user.entity.ts",{"_index":278,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:2",{"_index":282,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:3",{"_index":284,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":281,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":285,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":279,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":283,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":280,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":286,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":288,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:15",{"_index":295,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:22",{"_index":297,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:29",{"_index":300,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:36",{"_index":307,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":303,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":332,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":334,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":335,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:14",{"_index":337,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":338,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:43",{"_index":339,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:47",{"_index":341,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:55",{"_index":340,"title":{},"body":{"injectables/UsersService.html":{}}}],["start:dev",{"_index":443,"title":{},"body":{"index.html":{}}}],["started",{"_index":411,"title":{"index.html":{}},"body":{}}],["statements",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["strategy",{"_index":224,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["sucesso",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{}}}],["summary",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["super",{"_index":228,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":447,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":448,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":404,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["terminal",{"_index":426,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":269,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":270,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getstatus(\"http://localhost:3000",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.sign",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.create",{"_index":346,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":351,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":348,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":350,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":318,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":319,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":322,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":325,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["token",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":246,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["transformer",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":213,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["true})@isboolean()@isnotempty",{"_index":191,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["type",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('user",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["unknown",{"_index":221,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":455,"title":{},"body":{"properties.html":{}}}],["update",{"_index":293,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":324,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":304,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":175,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["updateuserdto",{"_index":272,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["useguards",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@delete(':id",{"_index":302,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@get",{"_index":296,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@get(':id",{"_index":299,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(undefined)@apibearerauth()@patch(':id",{"_index":306,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":87,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.'})@apibearerauth",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.decorator",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.decorator.ts",{"_index":364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":276,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":169,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":188,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:19",{"_index":194,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":187,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":197,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":183,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:53",{"_index":192,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:55",{"_index":185,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:56",{"_index":198,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user`s",{"_index":177,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["users",{"_index":289,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":333,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":311,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":287,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":46,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":310,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":249,"title":{},"body":{"classes/LoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["usuários",{"_index":419,"title":{},"body":{"index.html":{}}}],["utilizando",{"_index":421,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":422,"title":{},"body":{"index.html":{}}}],["validate",{"_index":215,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":217,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":205,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["values",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["variable",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":457,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":452,"title":{},"body":{"properties.html":{}}}],["visualizar",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n\n@ApiTags('status')\n\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n    @ApiOperation({\n      summary: 'Visualizar status da aplicação',\n    })\n    getStatus() {\n      return this.appService.getStatus(\"http://localhost:3000\");\n    }\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [PrismaModule, UsersModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getStatus(baseUrl: string){\n    return {\n      status: 'Server is running! 🚀',\n      docs: baseUrl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Login, receiving an authentication token'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Return the currently authenticated user.'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { user: User; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { \n  Body, \n  Controller, \n  Get, \n  HttpCode, \n  HttpStatus, \n  Post, \n  UseGuards\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post() \n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Login, receiving an authentication token',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto)\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Return the currently authenticated user.',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return { user };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    })\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly prisma: PrismaService, \n        private readonly jwtService: JwtService,\n    ) {}\n        async login(loginDto: LoginDto): Promise {\n            const { email, password } = loginDto;\n\n            const user = await this.prisma.user.findUnique({ where: { email } });\n            \n            if (!user) {\n                throw new UnauthorizedException('User and/or password is invalid');\n            }\n            \n            const isHashValid = await bcrypt.compare(password, user.password);\n            if (!isHashValid) {\n              throw new UnauthorizedException('User and/or password is invalid');\n            }\n\n            delete user.password;\n\n            return {\n                token: this.jwtService.sign({ email }),\n                user,\n                };\n            }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CPF\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s CPF number', example: '123.123.123-44'})@Length(13, 14)@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s Email', example: 'bruna@gmail.com'})@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'If user is Admin of server', example: true})@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s name', example: 'Bruna'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s senha', example: '123456'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { \n        Length,\n        IsString, \n        IsNotEmpty, \n        IsBoolean, \n        IsEmail\n    } from 'class-validator';\n\nexport class CreateUserDto {\n    \n    id:string;\n    @ApiProperty({\n        description: 'User`s name',\n        example: \"Bruna\",\n      })\n    @IsString()\n    @IsNotEmpty()\n        name: string;\n\n    @ApiProperty({\n        description: 'User`s Email',\n        example: \"bruna@gmail.com\",\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEmail()\n        email: string;\n\n    @ApiProperty({\n        description: 'User`s senha',\n        example: '123456',\n    })\n    @IsString()\n    @IsNotEmpty()\n        password: string; \n\n    @ApiProperty({\n        description: 'User`s CPF number',\n        example: '123.123.123-44',\n    })\n    @Length(13,14)\n    @IsString()\n    @IsNotEmpty()\n        CPF: string; \n\n    @ApiProperty({\n        description: 'If user is Admin of server',\n        example: true,\n    }) \n    @IsBoolean()\n    @IsNotEmpty()\n        isAdmin: boolean;\n        \n        createdAt: Date;\n        updatedAt: Date;\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'User does not exist or is not authenticated',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'User`s email address', example: 'bruna@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'User`s password', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: 'User`s email address',\n    example: 'bruna@gmail.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'User`s password',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT generated by login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity';\n\n\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT generated by login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CPF\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    id?:        string;\n    name:       string;\n    email:      string;\n    password:   string; \n    CPF:        string;   \n    isAdmin:    boolean;\n    createdAt?: Date;\n    updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@ApiBearerAuth()@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() dto: UpdateUserDto): Promise {\n    return this.usersService.update(id, dto);\n  }\n\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n\n@Injectable()\nexport class UsersService {\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateUserDto) {\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n      return await this.prisma.user.create({ \n        data, \n        select: {\n          name: true,\n          email: true,\n          password: false,\n          CPF: true,\n          isAdmin: true,\n        }\n      });\n    }\n\n    async findAll() {\n      return await this.prisma.user.findMany({\n        select: {\n          name: true,\n          email: true,\n          password: true,\n          CPF: false,\n          isAdmin: true,\n        }\n      });\n    }\n\n    async findOne(id: string) {\n      return await this.prisma.user.findUnique({ where: { id } });\n    }\n\n    async update(id: string, dto: UpdateUserDto) {\n      const data: Partial = { ...dto };\n      return this.prisma.user.update({ \n        where: { id },\n        data,\n       });\n    }\n\n    async remove(id: string) {\n      await this.prisma.user.delete({ where: { id } });\n      return {message: 'Usuário deletado com sucesso!'};\n    }\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^8.2.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^4.0.0\n        \n            bcrypt : ^5.0.1\n        \n            brazilian-values : ^0.10.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProjeto 1 - Módulo 5\nProjeto com CRUD e login de usuários, autenticação de login utilizando JWT.\nUtilize os seguintes comandos  no terminal para rodar o projeto:\n1 - Clone o projeto DO github utilizando o comando:\n    git clone https://github.com/brunabbomfim/M5-Projeto1.git\n2 - Para instalar as dependências:\n    npm install\n3- Para rodar:\n    npm run start:dev\nLink para visualizar aplicação no Swagger:\n  http://localhost:3000/api\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
